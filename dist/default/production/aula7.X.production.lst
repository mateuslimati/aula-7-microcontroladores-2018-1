

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 12 14:08:08 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F870 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  0092                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0092                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0007                     _PORTCbits	set	7
   140  0006                     _PORTB	set	6
   141  0005                     _PORTAbits	set	5
   142  0087                     _TRISCbits	set	135
   143  0085                     _TRISAbits	set	133
   144  0086                     _TRISB	set	134
   145                           
   146                           	psect	strings
   147  0001                     __pstrings:	
   148  0001                     stringtab:	
   149  0001                     __stringtab:	
   150  0001                     stringcode:	
   151                           ;	String table - string pointers are 1 byte each
   152                           
   153  0001                     stringdir:	
   154  0001  3000               	movlw	high stringdir
   155  0002  008A               	movwf	10
   156  0003  0804               	movf	4,w
   157  0004  0A84               	incf	4,f
   158  0005  0782               	addwf	2,f
   159  0006                     __stringbase:	
   160  0006  3400               	retlw	0
   161  0007                     __end_of__stringtab:	
   162  0007                     STR_1:	
   163  0007  3448               	retlw	72	;'H'
   164  0008  3465               	retlw	101	;'e'
   165  0009  346C               	retlw	108	;'l'
   166  000A  346C               	retlw	108	;'l'
   167  000B  346F               	retlw	111	;'o'
   168  000C  3400               	retlw	0
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  07FE                     start_initialization:	
   174  07FE                     __initialization:	
   175  07FE                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178  07FE                     __end_of__initialization:	
   179  07FE  0183               	clrf	3
   180  07FF  2F83               	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183  0070                     __pcstackCOMMON:	
   184  0070                     ?_init_LCD:	
   185  0070                     ?_write_LCD:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0070                     ?_main:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_enable:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_enable:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_send_cmd:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_send_msg:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205  0070                     	ds	2
   206  0072                     ??_send_cmd:	
   207  0072                     ??_send_msg:	
   208                           ; 1 bytes @ 0x2
   209                           
   210                           
   211                           ; 1 bytes @ 0x2
   212  0072                     	ds	2
   213  0074                     send_cmd@cmd:	
   214  0074                     send_msg@msg:	
   215                           ; 1 bytes @ 0x4
   216                           
   217                           
   218                           ; 1 bytes @ 0x4
   219  0074                     	ds	1
   220  0075                     ??_init_LCD:	
   221  0075                     ??_write_LCD:	
   222                           ; 1 bytes @ 0x5
   223                           
   224  0075                     write_LCD@i:	
   225                           ; 1 bytes @ 0x5
   226                           
   227                           
   228                           ; 2 bytes @ 0x5
   229  0075                     	ds	2
   230  0077                     write_LCD@c:	
   231                           
   232                           ; 1 bytes @ 0x7
   233  0077                     	ds	1
   234  0078                     ??_main:	
   235                           
   236                           	psect	maintext
   237  0783                     __pmaintext:	
   238                           ; 1 bytes @ 0x8
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 11 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1
   258 ;;      Params:         0       0       0
   259 ;;      Locals:         0       0       0
   260 ;;      Temps:          0       0       0
   261 ;;      Totals:         0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called:    3
   264 ;; This function calls:
   265 ;;		_init_LCD
   266 ;;		_write_LCD
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           
   273                           ;psect for function _main
   274  0783                     _main:	
   275                           
   276                           ;main.c: 13: init_LCD();
   277                           
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   280  0783  2787               	fcall	_init_LCD
   281                           
   282                           ;main.c: 14: write_LCD("Hello");
   283  0784  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   284  0785  27A6               	fcall	_write_LCD
   285  0786                     l9:	
   286                           ;main.c: 15: while(1){
   287                           
   288  0786  2F86               	goto	l9
   289  0787                     __end_of_main:	
   290                           
   291                           	psect	text1
   292  07A6                     __ptext1:	
   293 ;; *************** function _write_LCD *****************
   294 ;; Defined at:
   295 ;;		line 56 in file "lcd.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;  c               1    wreg     PTR unsigned char 
   298 ;;		 -> STR_1(6), 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  c               1    7[COMMON] PTR unsigned char 
   301 ;;		 -> STR_1(6), 
   302 ;;  i               2    5[COMMON] int 
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1
   312 ;;      Params:         0       0       0
   313 ;;      Locals:         3       0       0
   314 ;;      Temps:          0       0       0
   315 ;;      Totals:         3       0       0
   316 ;;Total ram usage:        3 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		_send_msg
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _write_LCD
   328  07A6                     _write_LCD:	
   329                           
   330                           ;incstack = 0
   331                           ; Regs used in _write_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   332                           ;write_LCD@c stored from wreg
   333  07A6  00F7               	movwf	write_LCD@c
   334                           
   335                           ;lcd.c: 58: int i = 0;
   336  07A7  01F5               	clrf	write_LCD@i
   337  07A8  01F6               	clrf	write_LCD@i+1
   338  07A9                     l562:	
   339                           ;lcd.c: 59: for(; c[i] != '\0'; i++)
   340                           
   341  07A9  0875               	movf	write_LCD@i,w
   342  07AA  0777               	addwf	write_LCD@c,w
   343  07AB  0084               	movwf	4
   344  07AC  2001               	fcall	stringdir
   345  07AD  3A00               	xorlw	0
   346  07AE  1903               	btfsc	3,2
   347  07AF  0008               	return
   348                           
   349                           ;lcd.c: 60: send_msg(c[i]);
   350  07B0  0875               	movf	write_LCD@i,w
   351  07B1  0777               	addwf	write_LCD@c,w
   352  07B2  0084               	movwf	4
   353  07B3  2001               	fcall	stringdir
   354  07B4  27BC               	fcall	_send_msg
   355  07B5  3001               	movlw	1
   356  07B6  07F5               	addwf	write_LCD@i,f
   357  07B7  1803               	skipnc
   358  07B8  0AF6               	incf	write_LCD@i+1,f
   359  07B9  3000               	movlw	0
   360  07BA  07F6               	addwf	write_LCD@i+1,f
   361  07BB  2FA9               	goto	l562
   362  07BC                     __end_of_write_LCD:	
   363                           
   364                           	psect	text2
   365  07BC                     __ptext2:	
   366 ;; *************** function _send_msg *****************
   367 ;; Defined at:
   368 ;;		line 32 in file "lcd.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  msg             1    wreg     unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  msg             1    4[COMMON] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1
   382 ;;      Params:         0       0       0
   383 ;;      Locals:         1       0       0
   384 ;;      Temps:          2       0       0
   385 ;;      Totals:         3       0       0
   386 ;;Total ram usage:        3 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    1
   389 ;; This function calls:
   390 ;;		_enable
   391 ;; This function is called by:
   392 ;;		_write_LCD
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _send_msg
   398  07BC                     _send_msg:	
   399                           
   400                           ;incstack = 0
   401                           ; Regs used in _send_msg: [wreg+status,2+status,0+pclath+cstack]
   402                           ;send_msg@msg stored from wreg
   403  07BC  00F4               	movwf	send_msg@msg
   404                           
   405                           ;lcd.c: 34: PORTB = msg;
   406  07BD  0874               	movf	send_msg@msg,w
   407  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   408  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   409  07C0  0086               	movwf	6	;volatile
   410                           
   411                           ;lcd.c: 35: PORTCbits.RC0 = 1;
   412  07C1  1407               	bsf	7,0	;volatile
   413                           
   414                           ;lcd.c: 36: _delay((unsigned long)((1)*(16000000/4000.0)));
   415  07C2  3006               	movlw	6
   416  07C3  00F3               	movwf	??_send_msg+1
   417  07C4  3030               	movlw	48
   418  07C5  00F2               	movwf	??_send_msg
   419  07C6                     u37:	
   420  07C6  0BF2               	decfsz	??_send_msg,f
   421  07C7  2FC6               	goto	u37
   422  07C8  0BF3               	decfsz	??_send_msg+1,f
   423  07C9  2FC6               	goto	u37
   424  07CA  0000               	nop
   425                           
   426                           ;lcd.c: 37: enable();
   427  07CB  27D9               	fcall	_enable
   428                           
   429                           ;lcd.c: 38: _delay((unsigned long)((1)*(16000000/4000.0)));
   430  07CC  3006               	movlw	6
   431  07CD  00F3               	movwf	??_send_msg+1
   432  07CE  3030               	movlw	48
   433  07CF  00F2               	movwf	??_send_msg
   434  07D0                     u47:	
   435  07D0  0BF2               	decfsz	??_send_msg,f
   436  07D1  2FD0               	goto	u47
   437  07D2  0BF3               	decfsz	??_send_msg+1,f
   438  07D3  2FD0               	goto	u47
   439  07D4  0000               	nop
   440                           
   441                           ;lcd.c: 39: PORTCbits.RC0 = 0;
   442  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   443  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   444  07D7  1007               	bcf	7,0	;volatile
   445  07D8  0008               	return
   446  07D9                     __end_of_send_msg:	
   447                           
   448                           	psect	text3
   449  0787                     __ptext3:	
   450 ;; *************** function _init_LCD *****************
   451 ;; Defined at:
   452 ;;		line 43 in file "lcd.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1
   466 ;;      Params:         0       0       0
   467 ;;      Locals:         0       0       0
   468 ;;      Temps:          0       0       0
   469 ;;      Totals:         0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    2
   473 ;; This function calls:
   474 ;;		_send_cmd
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _init_LCD
   482  0787                     _init_LCD:	
   483                           
   484                           ;lcd.c: 45: TRISB = 0x00;
   485                           
   486                           ;incstack = 0
   487                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
   488  0787  1683               	bsf	3,5	;RP0=1, select bank1
   489  0788  1303               	bcf	3,6	;RP1=0, select bank1
   490  0789  0186               	clrf	6	;volatile
   491                           
   492                           ;lcd.c: 46: TRISAbits.TRISA0 = 0;
   493  078A  1005               	bcf	5,0	;volatile
   494                           
   495                           ;lcd.c: 47: TRISCbits.TRISC0 = 0;
   496  078B  1007               	bcf	7,0	;volatile
   497                           
   498                           ;lcd.c: 49: send_cmd(0x01);
   499  078C  3001               	movlw	1
   500  078D  2795               	fcall	_send_cmd
   501                           
   502                           ;lcd.c: 50: send_cmd(0x38);
   503  078E  3038               	movlw	56
   504  078F  2795               	fcall	_send_cmd
   505                           
   506                           ;lcd.c: 51: send_cmd(0x80);
   507  0790  3080               	movlw	128
   508  0791  2795               	fcall	_send_cmd
   509                           
   510                           ;lcd.c: 52: send_cmd(0x0C);
   511  0792  300C               	movlw	12
   512  0793  2795               	fcall	_send_cmd
   513  0794  0008               	return
   514  0795                     __end_of_init_LCD:	
   515                           
   516                           	psect	text4
   517  0795                     __ptext4:	
   518 ;; *************** function _send_cmd *****************
   519 ;; Defined at:
   520 ;;		line 23 in file "lcd.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  cmd             1    wreg     unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  cmd             1    4[COMMON] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1
   534 ;;      Params:         0       0       0
   535 ;;      Locals:         1       0       0
   536 ;;      Temps:          2       0       0
   537 ;;      Totals:         3       0       0
   538 ;;Total ram usage:        3 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    1
   541 ;; This function calls:
   542 ;;		_enable
   543 ;; This function is called by:
   544 ;;		_init_LCD
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _send_cmd
   550  0795                     _send_cmd:	
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _send_cmd: [wreg+status,2+status,0+pclath+cstack]
   554                           ;send_cmd@cmd stored from wreg
   555  0795  00F4               	movwf	send_cmd@cmd
   556                           
   557                           ;lcd.c: 25: PORTB = cmd;
   558  0796  0874               	movf	send_cmd@cmd,w
   559  0797  1283               	bcf	3,5	;RP0=0, select bank0
   560  0798  1303               	bcf	3,6	;RP1=0, select bank0
   561  0799  0086               	movwf	6	;volatile
   562                           
   563                           ;lcd.c: 26: PORTCbits.RC0 = 0;
   564  079A  1007               	bcf	7,0	;volatile
   565                           
   566                           ;lcd.c: 27: enable();
   567  079B  27D9               	fcall	_enable
   568                           
   569                           ;lcd.c: 28: _delay((unsigned long)((1)*(16000000/4000.0)));
   570  079C  3006               	movlw	6
   571  079D  00F3               	movwf	??_send_cmd+1
   572  079E  3030               	movlw	48
   573  079F  00F2               	movwf	??_send_cmd
   574  07A0                     u57:	
   575  07A0  0BF2               	decfsz	??_send_cmd,f
   576  07A1  2FA0               	goto	u57
   577  07A2  0BF3               	decfsz	??_send_cmd+1,f
   578  07A3  2FA0               	goto	u57
   579  07A4  0000               	nop
   580  07A5  0008               	return
   581  07A6                     __end_of_send_cmd:	
   582                           
   583                           	psect	text5
   584  07D9                     __ptext5:	
   585 ;; *************** function _enable *****************
   586 ;; Defined at:
   587 ;;		line 12 in file "lcd.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1
   601 ;;      Params:         0       0       0
   602 ;;      Locals:         0       0       0
   603 ;;      Temps:          2       0       0
   604 ;;      Totals:         2       0       0
   605 ;;Total ram usage:        2 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_send_cmd
   611 ;;		_send_msg
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _enable
   617  07D9                     _enable:	
   618                           
   619                           ;lcd.c: 14: PORTAbits.RA0 = 0;
   620                           
   621                           ;incstack = 0
   622                           ; Regs used in _enable: [wreg]
   623  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   624  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   625  07DB  1005               	bcf	5,0	;volatile
   626                           
   627                           ;lcd.c: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
   628  07DC  3006               	movlw	6
   629  07DD  00F1               	movwf	??_enable+1
   630  07DE  3030               	movlw	48
   631  07DF  00F0               	movwf	??_enable
   632  07E0                     u67:	
   633  07E0  0BF0               	decfsz	??_enable,f
   634  07E1  2FE0               	goto	u67
   635  07E2  0BF1               	decfsz	??_enable+1,f
   636  07E3  2FE0               	goto	u67
   637  07E4  0000               	nop
   638                           
   639                           ;lcd.c: 16: PORTAbits.RA0 = 1;
   640  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   641  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   642  07E7  1405               	bsf	5,0	;volatile
   643                           
   644                           ;lcd.c: 17: _delay((unsigned long)((1)*(16000000/4000.0)));
   645  07E8  3006               	movlw	6
   646  07E9  00F1               	movwf	??_enable+1
   647  07EA  3030               	movlw	48
   648  07EB  00F0               	movwf	??_enable
   649  07EC                     u77:	
   650  07EC  0BF0               	decfsz	??_enable,f
   651  07ED  2FEC               	goto	u77
   652  07EE  0BF1               	decfsz	??_enable+1,f
   653  07EF  2FEC               	goto	u77
   654  07F0  0000               	nop
   655                           
   656                           ;lcd.c: 18: PORTAbits.RA0 = 0;
   657  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   658  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   659  07F3  1005               	bcf	5,0	;volatile
   660                           
   661                           ;lcd.c: 19: _delay((unsigned long)((1)*(16000000/4000.0)));
   662  07F4  3006               	movlw	6
   663  07F5  00F1               	movwf	??_enable+1
   664  07F6  3030               	movlw	48
   665  07F7  00F0               	movwf	??_enable
   666  07F8                     u87:	
   667  07F8  0BF0               	decfsz	??_enable,f
   668  07F9  2FF8               	goto	u87
   669  07FA  0BF1               	decfsz	??_enable+1,f
   670  07FB  2FF8               	goto	u87
   671  07FC  0000               	nop
   672  07FD  0008               	return
   673  07FE                     __end_of_enable:	
   674  007E                     btemp	set	126	;btemp
   675  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    write_LCD@c	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_write_LCD
    _write_LCD->_send_msg
    _send_msg->_enable
    _init_LCD->_send_cmd
    _send_cmd->_enable

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     147
                           _init_LCD
                          _write_LCD
 ---------------------------------------------------------------------------------
 (1) _write_LCD                                            3     3      0     132
                                              5 COMMON     3     3      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _send_msg                                             3     3      0      15
                                              2 COMMON     3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0      15
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _send_cmd                                             3     3      0      15
                                              2 COMMON     3     3      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_LCD
     _send_cmd
       _enable
   _write_LCD
     _send_msg
       _enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 12 14:08:08 2018

                      l9 0786                        pc 0002              __CFG_CP$OFF 0000  
                     u37 07C6                       u47 07D0                       u57 07A0  
                     u67 07E0                       u77 07EC                       u87 07F8  
                     fsr 0004                      l562 07A9             __CFG_CPD$OFF 0000  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   STR_1 0007             __CFG_WRT$OFF 0000                     _main 0783  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 0787  
                 ??_main 0078           __CFG_PWRTE$OFF 0000                   _enable 07D9  
       __end_of_init_LCD 0795         __end_of_send_cmd 07A6         __end_of_send_msg 07D9  
__end_of__initialization 07FE           __pcstackCOMMON 0070               __pmaintext 0783  
                ?_enable 0070              send_cmd@cmd 0074               __stringtab 0001  
              ?_init_LCD 0070              send_msg@msg 0074       __size_of_write_LCD 0016  
              ?_send_cmd 0070                ?_send_msg 0070          __size_of_enable 0025  
                __ptext1 07A6                  __ptext2 07BC                  __ptext3 0787  
                __ptext4 0795                  __ptext5 07D9     end_of_initialization 07FE  
             ??_init_LCD 0075               ??_send_cmd 0072               ??_send_msg 0072  
              _PORTAbits 0005                _PORTCbits 0007        __end_of_write_LCD 07BC  
              _TRISAbits 0085                _TRISCbits 0087           __end_of_enable 07FE  
    start_initialization 07FE                 ??_enable 0070                ___latbits 0000  
      __size_of_init_LCD 000E        __size_of_send_cmd 0011        __size_of_send_msg 001D  
              __pstrings 0001              __stringbase 0006                _write_LCD 07A6  
     __end_of__stringtab 0007               ?_write_LCD 0070                 _init_LCD 0787  
          __size_of_main 0004                 _send_cmd 0795                 _send_msg 07BC  
             write_LCD@c 0077               write_LCD@i 0075                stringcode 0001  
               stringdir 0001                 stringtab 0001              ??_write_LCD 0075  
